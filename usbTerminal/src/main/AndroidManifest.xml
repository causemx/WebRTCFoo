<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="org.itri.usbterminal">

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
<!--    <uses-permission android:name="itri.org.broadcast.permission.MY_BROADCAST" />-->
<!--    <permission android:name="itri.org.broadcast.permission.MY_BROADCAST" >-->
<!--    </permission>-->
<!--    <uses-permission android:name="com.cn.customview.permissions.MY_BROADCAST" />-->
<!--    <permission android:name="com.cn.customview.permissions.MY_BROADCAST" >-->
<!--    </permission>-->

    <!-- mipmap/ic_launcher created with Android Studio -> New -> Image Asset using @color/colorPrimaryDark as background color -->
    <application
        android:label="@string/app_name"
        android:theme="@style/AppTheme"
        tools:ignore="AllowBackup,GoogleAppIndexingWarning">
            <!-- for this simple app launchMode=singleTask and singleTop have same effect.
                 If you would start another activity in the app, e.g. Android Settings
                 then you should use singleTask, else a new MainActivity would be started
                 when the settings activity is currently shown -->
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:theme="@style/Theme.AppCompat.Light"
            android:launchMode="singleTask"
            android:windowSoftInputMode="stateHidden|adjustResize">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
<!--                <category android:name="android.intent.category.LAUNCHER" />-->
            </intent-filter>
<!--            <intent-filter>-->
<!--                <action android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED" />-->
<!--            </intent-filter>-->
            <meta-data
                android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED"
                android:resource="@xml/usb_device_filter" />
        </activity>
        <service android:name=".SerialService" />
    </application>

</manifest>
